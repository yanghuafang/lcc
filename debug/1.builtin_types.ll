; ModuleID = 'lcc'
source_filename = "lcc"
target datalayout = "e-m:o-i64:64-i128:128-n32:64-S128"
target triple = "arm64-apple-darwin24.2.0"

@charVal = global i8 65
@shortVal = global i16 1024
@shortVal2 = global i16 -1024
@intVal = global i32 12345678
@intVal2 = global i32 -12345678
@intVal3 = global i32 12345678
@intVal4 = global i32 -162254319
@longVal = global i64 1234567890
@longVal2 = global i64 -1234567890
@longVal3 = global i64 1234567890
@longVal4 = global i64 -1234567890
@ucharVal = global i8 -6
@ushortVal = global i16 2048
@uintVal = global i32 87654321
@uintVal2 = global i32 87654321
@uintVal3 = global i32 87654321
@uintVal4 = global i32 180150000
@ulongVal = global i64 9876043210
@ulongVal2 = global i64 9876043210
@floatVal = global float 0x400921FB40000000
@floatVal2 = global float 0x400921FB40000000
@doubleVal = global double 0x400921FB54442D11
@boolVal = global i1 true
@boolVal2 = global i1 false
@0 = private unnamed_addr constant [13 x i8] c"charVal: %c\0A\00", align 1
@1 = private unnamed_addr constant [15 x i8] c"shortVal: %hd\0A\00", align 1
@2 = private unnamed_addr constant [15 x i8] c"shortVal: %hd\0A\00", align 1
@3 = private unnamed_addr constant [12 x i8] c"intVal: %d\0A\00", align 1
@4 = private unnamed_addr constant [13 x i8] c"intVal2: %d\0A\00", align 1
@5 = private unnamed_addr constant [13 x i8] c"intVal3: %d\0A\00", align 1
@6 = private unnamed_addr constant [16 x i8] c"intVal4: -0x%x\0A\00", align 1
@7 = private unnamed_addr constant [14 x i8] c"longVal: %ld\0A\00", align 1
@8 = private unnamed_addr constant [15 x i8] c"longVal2: %ld\0A\00", align 1
@9 = private unnamed_addr constant [15 x i8] c"longVal3: %ld\0A\00", align 1
@10 = private unnamed_addr constant [15 x i8] c"longVal4: %ld\0A\00", align 1
@11 = private unnamed_addr constant [14 x i8] c"ucharVal: %u\0A\00", align 1
@12 = private unnamed_addr constant [16 x i8] c"ushortVal: %hu\0A\00", align 1
@13 = private unnamed_addr constant [13 x i8] c"uintVal: %u\0A\00", align 1
@14 = private unnamed_addr constant [14 x i8] c"uintVal2: %u\0A\00", align 1
@15 = private unnamed_addr constant [14 x i8] c"uintVal3: %u\0A\00", align 1
@16 = private unnamed_addr constant [16 x i8] c"uintVal4: 0x%x\0A\00", align 1
@17 = private unnamed_addr constant [15 x i8] c"ulongVal: %lu\0A\00", align 1
@18 = private unnamed_addr constant [16 x i8] c"ulongVal2: %lu\0A\00", align 1
@19 = private unnamed_addr constant [14 x i8] c"floatVal: %f\0A\00", align 1
@20 = private unnamed_addr constant [15 x i8] c"floatVal2: %f\0A\00", align 1
@21 = private unnamed_addr constant [18 x i8] c"doubleVal: %.15f\0A\00", align 1
@22 = private unnamed_addr constant [13 x i8] c"boolVal: %d\0A\00", align 1
@23 = private unnamed_addr constant [14 x i8] c"boolVal2: %d\0A\00", align 1

declare i32 @printf(i8*, ...)

define i32 @main() {
entry:
  %0 = load i8, i8* @charVal, align 1
  %1 = sext i8 %0 to i32
  %2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @0, i32 0, i32 0), i32 %1)
  %3 = load i16, i16* @shortVal, align 2
  %4 = sext i16 %3 to i32
  %5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @1, i32 0, i32 0), i32 %4)
  %6 = load i16, i16* @shortVal2, align 2
  %7 = sext i16 %6 to i32
  %8 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @2, i32 0, i32 0), i32 %7)
  %9 = load i32, i32* @intVal, align 4
  %10 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @3, i32 0, i32 0), i32 %9)
  %11 = load i32, i32* @intVal2, align 4
  %12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @4, i32 0, i32 0), i32 %11)
  %13 = load i32, i32* @intVal3, align 4
  %14 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @5, i32 0, i32 0), i32 %13)
  %15 = load i32, i32* @intVal4, align 4
  %16 = sub i32 0, %15
  %17 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @6, i32 0, i32 0), i32 %16)
  %18 = load i64, i64* @longVal, align 4
  %19 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @7, i32 0, i32 0), i64 %18)
  %20 = load i64, i64* @longVal2, align 4
  %21 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @8, i32 0, i32 0), i64 %20)
  %22 = load i64, i64* @longVal3, align 4
  %23 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @9, i32 0, i32 0), i64 %22)
  %24 = load i64, i64* @longVal4, align 4
  %25 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @10, i32 0, i32 0), i64 %24)
  %26 = load i8, i8* @ucharVal, align 1
  %27 = sext i8 %26 to i32
  %28 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @11, i32 0, i32 0), i32 %27)
  %29 = load i16, i16* @ushortVal, align 2
  %30 = sext i16 %29 to i32
  %31 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @12, i32 0, i32 0), i32 %30)
  %32 = load i32, i32* @uintVal, align 4
  %33 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @13, i32 0, i32 0), i32 %32)
  %34 = load i32, i32* @uintVal2, align 4
  %35 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @14, i32 0, i32 0), i32 %34)
  %36 = load i32, i32* @uintVal3, align 4
  %37 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @15, i32 0, i32 0), i32 %36)
  %38 = load i32, i32* @uintVal4, align 4
  %39 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @16, i32 0, i32 0), i32 %38)
  %40 = load i64, i64* @ulongVal, align 4
  %41 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @17, i32 0, i32 0), i64 %40)
  %42 = load i64, i64* @ulongVal2, align 4
  %43 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @18, i32 0, i32 0), i64 %42)
  %44 = load float, float* @floatVal, align 4
  %45 = fpext float %44 to double
  %46 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @19, i32 0, i32 0), double %45)
  %47 = load float, float* @floatVal2, align 4
  %48 = fpext float %47 to double
  %49 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @20, i32 0, i32 0), double %48)
  %50 = load double, double* @doubleVal, align 8
  %51 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @21, i32 0, i32 0), double %50)
  %52 = load i1, i1* @boolVal, align 1
  %53 = zext i1 %52 to i32
  %54 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @22, i32 0, i32 0), i32 %53)
  %55 = load i1, i1* @boolVal2, align 1
  %56 = zext i1 %55 to i32
  %57 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @23, i32 0, i32 0), i32 %56)
  ret i32 0
}
